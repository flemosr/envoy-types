// This file is @generated by prost-build.
/// Configuration for AWS credential provider. Normally, this is optional and the credentials are
/// retrieved from the environment or AWS configuration files by following the default credential
/// provider chain. This is to support cases where the credentials need to be explicitly provided
/// by the control plane.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AwsCredentialProvider {
    /// The option to use `AssumeRoleWithWebIdentity <<https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`\_.>
    /// If inline_credential is set, this is ignored.
    #[prost(message, optional, tag = "1")]
    pub assume_role_with_web_identity: ::core::option::Option<
        AssumeRoleWithWebIdentityCredentialProvider,
    >,
    /// The option to use an inline credential.
    /// If this is set, it takes precedence over assume_role_with_web_identity.
    #[prost(message, optional, tag = "2")]
    pub inline_credential: ::core::option::Option<InlineCredentialProvider>,
}
/// Configuration to use an inline AWS credential. This is an equivalent to setting the well-known
/// environment variables `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, and the optional `AWS_SESSION_TOKEN`.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InlineCredentialProvider {
    /// The AWS access key ID.
    #[prost(string, tag = "1")]
    pub access_key_id: ::prost::alloc::string::String,
    /// The AWS secret access key.
    #[prost(string, tag = "2")]
    pub secret_access_key: ::prost::alloc::string::String,
    /// The AWS session token. This is optional.
    #[prost(string, tag = "3")]
    pub session_token: ::prost::alloc::string::String,
}
/// Configuration to use `AssumeRoleWithWebIdentity <<https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`\_>
/// to get AWS credentials.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AssumeRoleWithWebIdentityCredentialProvider {
    /// The ARN of the role to assume.
    #[prost(string, tag = "1")]
    pub role_arn: ::prost::alloc::string::String,
    /// The web identity token that is provided by the identity provider to assume the role.
    #[prost(string, tag = "2")]
    pub web_identity_token: ::prost::alloc::string::String,
}
