// This file is @generated by prost-build.
/// Configuration for AWS credential provider. This is optional and the credentials are normally
/// retrieved from the environment or AWS configuration files by following the default credential
/// provider chain. However, this configuration can be used to override the default behavior.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AwsCredentialProvider {
    /// The option to use `AssumeRoleWithWebIdentity <<https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`\_.>
    #[prost(message, optional, tag = "1")]
    pub assume_role_with_web_identity_provider: ::core::option::Option<
        AssumeRoleWithWebIdentityCredentialProvider,
    >,
    /// The option to use an inline credential. If inline credential is provided, no chain will be created and only the inline credential will be used.
    #[prost(message, optional, tag = "2")]
    pub inline_credential: ::core::option::Option<InlineCredentialProvider>,
    /// The option to specify parameters for credential retrieval from an envoy data source, such as a file in AWS credential format.
    #[prost(message, optional, tag = "3")]
    pub credentials_file_provider: ::core::option::Option<
        CredentialsFileCredentialProvider,
    >,
    /// Create a custom credential provider chain instead of the default credential provider chain.
    /// If set to TRUE, the credential provider chain that is created contains only those set in this credential provider message.
    /// If set to FALSE, the settings provided here will act as modifiers to the default credential provider chain.
    /// Defaults to FALSE.
    ///
    /// This has no effect if inline_credential is provided.
    #[prost(bool, tag = "4")]
    pub custom_credential_provider_chain: bool,
}
/// Configuration to use an inline AWS credential. This is an equivalent to setting the well-known
/// environment variables `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, and the optional `AWS_SESSION_TOKEN`.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InlineCredentialProvider {
    /// The AWS access key ID.
    #[prost(string, tag = "1")]
    pub access_key_id: ::prost::alloc::string::String,
    /// The AWS secret access key.
    #[prost(string, tag = "2")]
    pub secret_access_key: ::prost::alloc::string::String,
    /// The AWS session token. This is optional.
    #[prost(string, tag = "3")]
    pub session_token: ::prost::alloc::string::String,
}
/// Configuration to use `AssumeRoleWithWebIdentity <<https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`\_>
/// to retrieve AWS credentials.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AssumeRoleWithWebIdentityCredentialProvider {
    /// Data source for a web identity token that is provided by the identity provider to assume the role.
    /// When using this data source, even if a `watched_directory` is provided, the token file will only be re-read when the credentials
    /// returned from AssumeRoleWithWebIdentity expire.
    #[prost(message, optional, tag = "1")]
    pub web_identity_token_data_source: ::core::option::Option<
        super::super::super::super::config::core::v3::DataSource,
    >,
    /// The ARN of the role to assume.
    #[prost(string, tag = "2")]
    pub role_arn: ::prost::alloc::string::String,
    /// Optional role session name to use in AssumeRoleWithWebIdentity API call.
    #[prost(string, tag = "3")]
    pub role_session_name: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CredentialsFileCredentialProvider {
    /// Data source from which to retrieve AWS credentials
    /// When using this data source, if a `watched_directory` is provided, the credential file will be re-read when a file move is detected.
    /// See :ref:`watched_directory <envoy_v3_api_msg_config.core.v3.DataSource>` for more information about the `watched_directory` field.
    #[prost(message, optional, tag = "1")]
    pub credentials_data_source: ::core::option::Option<
        super::super::super::super::config::core::v3::DataSource,
    >,
    /// The profile within the credentials_file data source. If not provided, the default profile will be used.
    #[prost(string, tag = "2")]
    pub profile: ::prost::alloc::string::String,
}
