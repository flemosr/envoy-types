// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.data.tap.v3;

import "envoy/data/tap/v3/http.proto";
import "envoy/data/tap/v3/transport.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.data.tap.v3";
option java_outer_classname = "WrapperProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/data/tap/v3;tapv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Tap data wrappers]

// Wrapper for all fully buffered and streamed tap traces that Envoy emits. This is required for
// sending traces over gRPC APIs or more easily persisting binary messages to files.
message TraceWrapper {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.data.tap.v2alpha.TraceWrapper";

  oneof trace {
    option (validate.required) = true;

    // An HTTP buffered tap trace.
    HttpBufferedTrace http_buffered_trace = 1;

    // An HTTP streamed tap trace segment.
    HttpStreamedTraceSegment http_streamed_trace_segment = 2;

    // A socket buffered tap trace.
    SocketBufferedTrace socket_buffered_trace = 3;

    // A socket streamed tap trace segment.
    SocketStreamedTraceSegment socket_streamed_trace_segment = 4;
  }
}
