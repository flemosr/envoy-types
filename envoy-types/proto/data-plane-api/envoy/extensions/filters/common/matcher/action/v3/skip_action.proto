// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.extensions.filters.common.matcher.action.v3;

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.common.matcher.action.v3";
option java_outer_classname = "SkipActionProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/common/matcher/action/v3;actionv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Common match actions]

// Configuration for the SkipFilter match action. When matching results in this action, the
// associated filter will be ignored for all filter callbacks (e.g. ``encodeHeaders``, ``encodeData``,
// etc. for HTTP filters) after the matcher arrives at the match, including the callback that
// caused the match result. For example, when used with a HTTP filter and the match result was
// resolved after receiving the HTTP response headers, the HTTP filter will *not* receive the
// response header callback.
//
// As a result, if this match action is resolved before the first filter callback (e.g. HTTP request
// headers), the filter will be completely skipped.
message SkipFilter {
}
