// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.extensions.transport_sockets.quic.v3;

import "envoy/extensions/transport_sockets/tls/v3/tls.proto";

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.transport_sockets.quic.v3";
option java_outer_classname = "QuicTransportProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/quic/v3;quicv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: quic transport]
// [#comment:#extension: envoy.transport_sockets.quic]

// Configuration for Downstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.
message QuicDownstreamTransport {
  tls.v3.DownstreamTlsContext downstream_tls_context = 1
      [(validate.rules).message = {required: true}];

  // If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
  // Default to true.
  google.protobuf.BoolValue enable_early_data = 2;
}

// Configuration for Upstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.
message QuicUpstreamTransport {
  tls.v3.UpstreamTlsContext upstream_tls_context = 1 [(validate.rules).message = {required: true}];
}
