// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.extensions.transport_sockets.tap.v3;

import "envoy/config/core/v3/base.proto";
import "envoy/extensions/common/tap/v3/common.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.transport_sockets.tap.v3";
option java_outer_classname = "TapProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tap/v3;tapv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Tap]
// [#extension: envoy.transport_sockets.tap]

// Configuration for tap transport socket. This wraps another transport socket, providing the
// ability to interpose and record in plain text any traffic that is surfaced to Envoy.
message Tap {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.transport_socket.tap.v2alpha.Tap";

  // Common configuration for the tap transport socket.
  common.tap.v3.CommonExtensionConfig common_config = 1
      [(validate.rules).message = {required: true}];

  // The underlying transport socket being wrapped.
  config.core.v3.TransportSocket transport_socket = 2 [(validate.rules).message = {required: true}];
}
