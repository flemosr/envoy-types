// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.extensions.resource_monitors.downstream_connections.v3;

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.resource_monitors.downstream_connections.v3";
option java_outer_classname = "DownstreamConnectionsProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/resource_monitors/downstream_connections/v3;downstream_connectionsv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Downstream connections]
// [#extension: envoy.resource_monitors.global_downstream_max_connections]

// The downstream connections resource monitor tracks the global number of open downstream connections.
message DownstreamConnectionsConfig {
  // Maximum threshold for global open downstream connections, defaults to 0.
  // If monitor is enabled in Overload manager api, this field should be explicitly configured with value greater than 0.
  int64 max_active_downstream_connections = 1 [(validate.rules).int64 = {gt: 0}];
}
