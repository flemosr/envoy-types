// Copyright 2025 Envoy Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package envoy.extensions.health_checkers.redis.v3;

import "envoy/extensions/filters/network/redis_proxy/v3/redis_proxy.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";

option java_package = "io.envoyproxy.envoy.extensions.health_checkers.redis.v3";
option java_outer_classname = "RedisProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/health_checkers/redis/v3;redisv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Redis]
// Redis health checker :ref:`configuration overview <config_health_checkers_redis>`.
// [#extension: envoy.health_checkers.redis]

message Redis {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.health_checker.redis.v2.Redis";

  // If set, optionally perform ``EXISTS <key>`` instead of ``PING``. A return value
  // from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
  // than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
  // by setting the specified key to any value and waiting for traffic to drain.
  string key = 1;

  // Use AWS IAM for health checker authentication
  filters.network.redis_proxy.v3.AwsIam aws_iam = 2;
}
